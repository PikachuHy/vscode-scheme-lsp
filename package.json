{
	"name": "scheme-lsp-client",
	"publisher": "rgherdt",
	"license": "GPL-3.0",
	"author": {
		"name": "Ricardo G. Herdt"
	},
	"repository": {
		"type": "git",
		"url": "https://codeberg.org/rgherdt/vscode-scheme-lsp"
	},
	"displayName": "Scheme LSP Client",
	"description": "A LSP-based extension for Scheme",
	"version": "0.1.0",
	"engines": {
		"vscode": "^1.55.0"
	},
	"categories": [
		"Programming Languages"
	],
	"activationEvents": [
		"onLanguage:scheme",
		"onCommand:config.commands.configureViewOnWindowOpen"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "scheme-lsp-client.launch",
				"title": "Scheme LSP: launch server"
			},
			{
				"command": "scheme-lsp-client.connect",
				"title": "Scheme LSP: connect to LSP server"
			},
			{
				"command": "scheme-lsp-client.install-chicken-lsp-server",
				"title": "Scheme LSP: install LSP server for CHICKEN to extension directory"
			},
			{
				"command": "scheme-lsp-client.install-guile-lsp-server",
				"title": "Scheme LSP: install LSP server for Guile to extension directory"
			},
			{
				"command": "scheme-lsp-client.select-implementation",
				"title": "Scheme LSP: select scheme implementation"
			},
			{
				"command": "scheme-lsp-client.load-file",
				"title": "Scheme LSP: load current file"
			}
		],
		"configuration": [
			{
				"type": "object",
				"title": "Scheme LSP Client",
				"properties": {
					"schemeLsp.chickenReplCommand": {
						"scope": "application",
						"type": "string",
						"default": "rlwrap csi -R r7rs",
						"description": "Command to start CHICKEN's interpreter (csi)"
					},
					"schemeLsp.guileReplCommand": {
						"scope": "application",
						"type": "string",
						"default": "guile --r7rs",
						"description": "Command to start Guile scheme"
					},
					"schemeLsp.schemeImplementation": {
						"scope": "application",
						"type": "string",
						"enum": [
							"chicken",
							"guile"
						],
						"default": "chicken",
						"description": "Default scheme implementation"
					},
					"schemeLsp.lspServerPort": {
						"scope": "application",
						"type": "integer",
						"default": 4242,
						"description": "TCP localhost port where the LSP server listens to."
					},
					"schemeLsp.debugLevel": {
						"scope": "application",
						"type": "string",
						"enum": [
							"error",
							"warning",
							"info",
							"debug"
						],
						"default": "error",
						"description": "Controls the verbosity of log messages on the server. 'error' means only error messages, 'debug' means maximal verbosity."
					},
					"schemeLsp.trace.server": {
						"scope": "window",
						"type": "string",
						"enum": [
							"off",
							"messages",
							"verbose"
						],
						"default": "off",
						"description": "Traces the communication between VS Code and the language server."
					},
					"schemeLsp.lspServerVersion": {
						"scope": "application",
						"type": "string",
						"default": "master",
						"description": "Version of Scheme LSP Server"
					},
					"schemeLsp.jsonRpcVersion": {
						"scope": "application",
						"type": "string",
						"default": "master",
						"description": "Version of JSON RPC library for Scheme"
					},
					"schemeLsp.lspServerTarballDirectoryUrl": {
						"scope": "application",
						"type": "string",
						"default": "https://codeberg.org/rgherdt/scheme-lsp-server/archive/",
						"description": "URL of LSP Server's installer"
					},
					"schemeLsp.jsonRpcTarballDirectoryUrl": {
						"scope": "application",
						"type": "string",
						"default": "https://codeberg.org/rgherdt/scheme-json-rpc/archive/",
						"description": "URL of JSON RPC library for Scheme"
					}
				}
			}
		],
		"languages": [
			{
				"id": "scheme",
				"aliases": [
					"Scheme",
					"scheme"
				],
				"extensions": [
					".scm",
					".ss",
					".sch",
					".rkt"
				],
				"configuration": "./scheme.configuration.json"
			}
		],
		"grammars": [
			{
				"language": "scheme",
				"scopeName": "source.scheme",
				"path": "./syntaxes/scheme.tmLanguage"
			},
			{
				"scopeName": "markdown.scheme.codeblock",
				"path": "./syntaxes/scheme.markdown.tmLanguage.json",
				"injectTo": [
					"text.html.markdown"
				]
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"dependencies": {
		"hasbin": "^1.2.3",
		"vscode-jsonrpc": "^5.0.1",
		"vscode-languageclient": "^6.1.3"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/hasbin": "^1.2.0",
		"@types/mocha": "^8.0.4",
		"@types/node": "^12.11.7",
		"@types/vscode": "^1.55.0",
		"@typescript-eslint/eslint-plugin": "^4.14.1",
		"@typescript-eslint/parser": "^4.14.1",
		"eslint": "^7.19.0",
		"glob": "^7.1.6",
		"mocha": "^8.2.1",
		"typescript": "^4.1.3",
		"vscode-test": "^1.5.0"
	}
}
